[naoko]
# CyTube room to join
room = science
# Password for the CyTube room (can be blank)
room_pw =
# Nickname for the bot
nick = NaokoBot
# Password for the bot's account
pass =
# The domain for CyTube
domain = cytube.calzoneman.net
# Default CyTube IO_URL
# Used when Naoko is unable to access iourl.js, such as when Cloudflare's protection is turned up in 
# response to a DDoS attack.
# Find it at <domain>/assets/js/iourl.js
# Should be similar Cytube's IO_URL, which is http://sea.cytu.be:8880
# Can be blank, but it is best to fill this in and manually update it if Naoko can't connect at all.
default_io_url = http://sea.cytu.be:8880

# Minimum time between messages (in seconds)
spam_interval = 0.5
# Minimum time between skips (in seconds)
# Used to detect scripts spamming skip votes.
# Does not affect skip commands.
skip_interval = 30

# The port used for the interactive console.
# If left blank the interactive console will be disabled.
# An unused port like 5001 is recommended.
repl_port =

# Hybrid mod Administrator (can be blank)
# The mod (must be a mod) who can edit the permissions for hybrid mods.
# If blank any mod can make changes.
hmod_admin =

# IRC server
irc_server = irc.as.rizon.net
# IRC channel - Case sensitive
irc_channel =
# IRC nick (if blank IRC will be disabled)
irc_nick =
# IRC password (can be blank)
irc_pass =

# Location of sqlite3 database file. An empty database will be created if file
# does not exist. If db_file is set to ':memory:', an sqlite3 in-memory database
# will be created and no database operations will persist between restarts.
# If left blank, database operations will be disabled.
db_file = naoko.db

# Soundcloud Client ID
# Required to connect to the Soundcloud API.
# Without one she will be unable to validate Soundcloud tracks.
# She will default to not storing Soundcloud tracks in her database 
# and trusting the durations provided by Synchtube.
# See http://soundcloud.com/you/apps to register your appplication and acquire an ID.
sc_client_id =

# Microsoft Translator API
# If it is blank translation will be disabled
# See http://www.microsofttranslator.com/dev/ 
# and http://msdn.microsoft.com/en-us/library/hh454950.aspx 
# for instructions on how to get a Client ID and a Client Secret
mst_client_id =

# Microsoft Translator Client Secret
mst_client_secret =

# Wolfram Alpha Client ID
# See http://products.wolframalpha.com/api/ to register your application and obtain an ID.
wolfram_id =

# Youtube Developer Key
# See http://code.google.com/apis/youtube/dashboard/ to register for a key
# This is optional but it should reduce the chance of problems with the Youtube API
youtube_id =

# Web Server
# Specify the mode of the web server, the valid options are standalone, embedded, and blank.
# In embedded mode the server will be handled by Naoko, but will be dependent on her running.
# In standalone mode you can control it independently of Naoko.
# If you leave this blank the web server will be completely disabled.
# Standalone mode only works on operating systems which supply a proper fork(), which does not include Windows.
webserver_mode =
# The protocol being used. Valid options are http and fastcgi. http uses the bottle.py server, which is slow, while
# fastcgi uses flup and requires another web server, such as apache or nginx, be set up to serve requests.
# fastcgi requires standalone mode and that flup be installed separately.
# See https://pypi.python.org/pypi/flup or install it using a tool like pip.
webserver_protocol = http
# Specify the host the webserver will be listening for.
# Common options would be localhost, where it will only be accessible from the machine where she is running, and
# 0.0.0.0 where she will listen for all traffic on the specified port. When using fastcgi to connect to another
# server it is recommended to only listen to the ip of the machine which hosts the web server, which is most likely
# localhost.
webserver_host =
# Specify the port on which Naoko will listen for connections.
# Standard HTTP is port 80, but that is likely to require superuser permissions. Port 8080 is recommended for http.
# The site will be accessible on <IP of this machine>:8080 in that case.
# With fastcgi an unused port like 9000 is recommended
webserver_port =
# Specify the URL that uses can use to access the webserver.
# This is what you'd type into a browser to get to the website.
# Does not affect operation of the webserver, only makes it easier for users to find it.
webserver_url =

# Weatherunderground apikey
weather = 
